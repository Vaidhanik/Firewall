services:
  network_monitor:
    build:
      context: ./src
      dockerfile: Dockerfile.firewall
    container_name: network_monitor
    privileged: true # Enables privileged mode to allow sudo-level operations
    network_mode: "host" # Allows the container to directly access the host network (necessary for `arp`, `netstat`, etc.)
    pid: "host"
    volumes:
      # - /sys:/sys:ro
      # - /proc:/proc:ro
      - ./src/server.py:/app/server.py
      - ./src/run_tracer.py:/app/run_tracer.py
      - ./src/run_controller.py:/app/run_controller.py
      - ./src/monitor/:/app/monitor/
      - ./src/interceptor/:/app/interceptor/
      - ./src/requirements.txt:/app/requirements.txt
      - ./src/network_controller/:/app/network_controller/
    ports:
      - 5000:5000
    cap_add:
      - NET_ADMIN # Adds the NET_ADMIN capability for networking tasks
      - SYS_ADMIN # Adds SYS_ADMIN for additional networking capabilities
    environment:
      - FLASK_APP=server.py
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
      # - NET_RAW
      # - SYS_PTRACE
    # security_opt:
    #   - apparmor=unconfined
    # command: python server.py
    command: /entrypoint.sh
    stdin_open: true # Keeps the stdin open for interactive sessions
    tty: true # Allocates a pseudo-TTY
    restart: unless-stopped