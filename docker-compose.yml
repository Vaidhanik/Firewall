services:
  # network_monitor:
  #   build:
  #     context: ./src
  #     dockerfile: Dockerfile.firewall
  #   container_name: network_monitor
  #   privileged: true # Enables privileged mode to allow sudo-level operations
  #   network_mode: "host" # Allows the container to directly access the host network (necessary for `arp`, `netstat`, etc.)
  #   pid: "host"
  #   volumes:
  #     # - /sys:/sys:ro
  #     # - /proc:/proc:ro
  #     - ./src/server.py:/app/server.py
  #     - ./src/run_tracer.py:/app/run_tracer.py
  #     - ./src/run_controller.py:/app/run_controller.py
  #     - ./src/monitor/:/app/monitor/
  #     - ./src/interceptor/:/app/interceptor/
  #     - ./src/requirements.txt:/app/requirements.txt
  #     - ./src/network_controller/:/app/network_controller/
  #   ports:
  #     - 5000:5000
  #   cap_add:
  #     - NET_ADMIN # Adds the NET_ADMIN capability for networking tasks
  #     - SYS_ADMIN # Adds SYS_ADMIN for additional networking capabilities
  #   environment:
  #     - FLASK_APP=server.py
  #     - FLASK_ENV=production
  #     - PYTHONUNBUFFERED=1
  #     # - NET_RAW
  #     # - SYS_PTRACE
  #   # security_opt:
  #   #   - apparmor=unconfined
  #   # command: python server.py
  #   command: /entrypoint.sh
  #   stdin_open: true # Keeps the stdin open for interactive sessions
  #   tty: true # Allocates a pseudo-TTY
  #   restart: unless-stopped
  mongo-rules:
    image: mongo:7.0
    container_name: db-mongo-interceptor-rules
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongorulesuser
      - MONGO_INITDB_ROOT_PASSWORD=rulespass
    ports:
      - "27018:27017"
    volumes:
      - mongo_rules:/data/db

  mongo-attempts:
    image: mongo:7.0
    container_name: db-mongo-interceptor-attempts
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongoattemptsuser
      - MONGO_INITDB_ROOT_PASSWORD=attemptspass
    ports:
      - "27019:27017"
    volumes:
      - mongo_attempts:/data/db

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express-interceptor
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo-rules,mongo-attempts
      - ME_CONFIG_MONGODB_ADMINUSERNAME=mongorulesuser
      - ME_CONFIG_MONGODB_ADMINPASSWORD=rulespass
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=pass123
    ports:
      - "8081:8081"
    depends_on:
      - mongo-rules
      - mongo-attempts

volumes:
  mongo_rules:
    driver: local
  mongo_attempts:
    driver: local